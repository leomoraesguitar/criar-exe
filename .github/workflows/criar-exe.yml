name: Build EXE

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write  # Permissão para criar releases e upload de arquivos

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12.2'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade pyinstaller
        pip install -r requirements.txt

    - name: Build EXE
      run: pyinstaller --onefile --windowed main.py

    - name: Compress Build Output
      run: |
        Compress-Archive -Path dist\* -DestinationPath windows-main-artifact.zip

    - name: Generate Tag with Date and Time
      id: generate_tag
      run: echo "TAG_NAME=$(date -u +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV  # Gera uma tag no formato AAAAMMDD-HHMMSS

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}  # Usa a tag gerada com data e hora
        release_name: 'Build EXE Release -  v1.0.1'
        body: |
          Lançamento do executável gerado em  -  v1.0.1.
        draft: false
        prerelease: false

    - name: Upload Windows Artifact
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: windows-main-artifact.zip
        asset_name: windows-main-artifact-${{ env.TAG_NAME }}.zip
        asset_content_type: application/zip
